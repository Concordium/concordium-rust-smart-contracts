[package]
name = "concordium-std"
version = "2.0.0"
authors = ["Concordium <developers@concordium.com>"]
edition = "2018"
license = "MPL-2.0"
description = "A standard library for writing smart contracts for the Concordium blockchain in Rust."
homepage = "https://github.com/Concordium/concordium-rust-smart-contracts/"
repository = "https://github.com/Concordium/concordium-rust-smart-contracts/"
readme = "./README.md"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[dependencies]
# Reduce code size, at the cost of performance in allocation heavy-code.
wee_alloc="0.4.5"

[dependencies.concordium-std-derive]
path = "../concordium-std-derive"
version = "2.0"

[dependencies.concordium-contracts-common]
path = "../concordium-contracts-common"
version = "2.0"
default-features = false

[features]
default = ["std"]

std = ["concordium-contracts-common/std"]
wasm-test = ["concordium-std-derive/wasm-test"]
build-schema = ["concordium-std-derive/build-schema"]

[lib]
crate-type = ["rlib"]

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
# Don't unwind on panics, just trap.
# panic = "abort"
